// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StarWarsRPG.Data;

namespace StarWarsRPG.Migrations
{
    [DbContext(typeof(StarWarsRPGCharacterBuilderContext))]
    partial class StarWarsRPGCharacterBuilderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StarWarsRPG.Models.ArcType", b =>
                {
                    b.Property<int>("ArcTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("arcTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("ArcTypeId");

                    b.ToTable("arcType","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Armor", b =>
                {
                    b.Property<int>("ArmorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("armorId");

                    b.Property<int?>("ArmorTypeId")
                        .HasColumnName("armorTypeId");

                    b.Property<int?>("Defense")
                        .HasColumnName("defense");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Encumberance")
                        .HasColumnName("encumberance");

                    b.Property<int?>("HardPoints")
                        .HasColumnName("hardPoints");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Price")
                        .HasColumnName("price");

                    b.Property<int?>("RarityId")
                        .HasColumnName("rarityID");

                    b.Property<bool?>("Restricted")
                        .HasColumnName("restricted");

                    b.Property<int?>("Soak")
                        .HasColumnName("soak");

                    b.HasKey("ArmorId");

                    b.ToTable("armor","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.ArmorReference", b =>
                {
                    b.Property<int>("ArmorId")
                        .HasColumnName("armorId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("ArmorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("armorReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.ArmorType", b =>
                {
                    b.Property<int>("ArmorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("armorTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("ArmorTypeId");

                    b.ToTable("armorType","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Attachment", b =>
                {
                    b.Property<int>("GearAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gearAttachmentId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Encumberance")
                        .HasColumnName("encumberance");

                    b.Property<int?>("GearAttachmentTypeId")
                        .HasColumnName("gearAttachmentTypeId");

                    b.Property<int?>("HardPointRequirement")
                        .HasColumnName("hardPointRequirement");

                    b.Property<int?>("MaximumProfileId")
                        .HasColumnName("maximumProfileId");

                    b.Property<int?>("MinimumProfileId")
                        .HasColumnName("minimumProfileId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Price")
                        .HasColumnName("price");

                    b.Property<int?>("RarityId")
                        .HasColumnName("rarityId");

                    b.Property<bool?>("Restricted")
                        .HasColumnName("restricted");

                    b.HasKey("GearAttachmentId");

                    b.ToTable("attachment","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.AttachmentModification", b =>
                {
                    b.Property<int>("AttachmentModificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attachmentModificationId");

                    b.Property<int?>("AttachmentId")
                        .HasColumnName("attachmentId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("AttachmentModificationId");

                    b.HasIndex("AttachmentId");

                    b.ToTable("attachmentModification","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.AttachmentReference", b =>
                {
                    b.Property<int>("AttachmentId")
                        .HasColumnName("attachmentId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("AttachmentId", "BookId");

                    b.ToTable("attachmentReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.AttachmentType", b =>
                {
                    b.Property<int>("GearAttachmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gearAttachmentTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("GearAttachmentTypeId");

                    b.ToTable("attachmentType","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Background", b =>
                {
                    b.Property<int>("BackgroundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("backgroundId");

                    b.Property<int?>("BookId")
                        .HasColumnName("bookId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("BackgroundId");

                    b.ToTable("background","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("bookId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("BookId");

                    b.ToTable("book","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Career", b =>
                {
                    b.Property<int>("CareerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("careerId");

                    b.Property<int?>("BookId")
                        .HasColumnName("bookId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("CareerId");

                    b.ToTable("career","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CareerSpecialization", b =>
                {
                    b.Property<int>("CareerSpecializationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("careerSpecializationId");

                    b.Property<int?>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("CareerId")
                        .HasColumnName("careerId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("CareerSpecializationId");

                    b.HasIndex("CareerId");

                    b.ToTable("careerSpecialization","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CareerSpecializtionTalent", b =>
                {
                    b.Property<int>("CareerTalentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("careerTalentId");

                    b.Property<int?>("CareerSpecializationId")
                        .HasColumnName("careerSpecializationId");

                    b.Property<int?>("Cost")
                        .HasColumnName("cost");

                    b.Property<int?>("TalentId")
                        .HasColumnName("talentId");

                    b.HasKey("CareerTalentId");

                    b.HasIndex("CareerSpecializationId");

                    b.ToTable("careerSpecializtionTalent","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CareerSpecializtionTalentGraph", b =>
                {
                    b.Property<int>("ParentTalentId")
                        .HasColumnName("parentTalentId");

                    b.Property<int>("ChildTalentId")
                        .HasColumnName("childTalentId");

                    b.HasKey("ParentTalentId", "ChildTalentId");

                    b.HasIndex("ChildTalentId");

                    b.ToTable("careerSpecializtionTalentGraph","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("characteristicId");

                    b.Property<int?>("CharacteristicTypeId")
                        .HasColumnName("characteristicTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("CharacteristicId");

                    b.HasIndex("CharacteristicTypeId");

                    b.ToTable("characteristic","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CharacteristicType", b =>
                {
                    b.Property<int>("CharacteristicTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("characteristicTypeId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("CharacteristicTypeId");

                    b.ToTable("characteristicType","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Crew", b =>
                {
                    b.Property<int>("VehicleCrewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vehicleCrewId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("VehicleCrewId");

                    b.ToTable("crew","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Gear", b =>
                {
                    b.Property<int>("GearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gearId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Encumberance")
                        .HasColumnName("encumberance");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Price")
                        .HasColumnName("price");

                    b.Property<int?>("RarityId")
                        .HasColumnName("rarityId");

                    b.Property<bool?>("Restricted")
                        .HasColumnName("restricted");

                    b.HasKey("GearId");

                    b.ToTable("gear","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearAttachmentReference", b =>
                {
                    b.Property<int>("GearAttachmentId")
                        .HasColumnName("gearAttachmentId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("GearAttachmentId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("gearAttachmentReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearQualityReference", b =>
                {
                    b.Property<int>("GearQualityId")
                        .HasColumnName("gearQualityId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("GearQualityId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("gearQualityReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearReference", b =>
                {
                    b.Property<int>("GearId")
                        .HasColumnName("gearId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("GearId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("gearReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearType", b =>
                {
                    b.Property<int>("GearTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gearTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("GearTypeId");

                    b.ToTable("gearType","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Hyperdrive", b =>
                {
                    b.Property<int>("HyperdriveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hyperdriveID");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("HyperdriveId");

                    b.ToTable("hyperdrive","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Motivation", b =>
                {
                    b.Property<int>("MotivationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("motivationId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("MotivationId");

                    b.ToTable("motivation","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Obligation", b =>
                {
                    b.Property<int>("ObligationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("obligationId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("ObligationTypeId")
                        .HasColumnName("obligationTypeId");

                    b.HasKey("ObligationId");

                    b.HasIndex("ObligationTypeId");

                    b.ToTable("obligation","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.ObligationType", b =>
                {
                    b.Property<int>("ObligationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("obligationTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("ObligationTypeId");

                    b.ToTable("obligationType","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Quality", b =>
                {
                    b.Property<int>("QualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qualityId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<bool?>("Passive")
                        .HasColumnName("passive");

                    b.HasKey("QualityId");

                    b.ToTable("quality","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Range", b =>
                {
                    b.Property<int>("RangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rangeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("RangeId");

                    b.ToTable("range","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Rarity", b =>
                {
                    b.Property<int>("RarityId")
                        .HasColumnName("rarityId");

                    b.Property<int?>("CostMultiplier")
                        .HasColumnName("costMultiplier");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("RarityId");

                    b.ToTable("rarity","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SensorType", b =>
                {
                    b.Property<int>("VehicleSensorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vehicleSensorTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("VehicleSensorTypeId");

                    b.ToTable("sensorType","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("skillId");

                    b.Property<int?>("CharacteristicId")
                        .HasColumnName("characteristicId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("SkillTypeId")
                        .HasColumnName("skillTypeId");

                    b.HasKey("SkillId");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("skill","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SkillReference", b =>
                {
                    b.Property<int>("SkillId")
                        .HasColumnName("skillId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("SkillId", "BookId");

                    b.ToTable("skillReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SkillType", b =>
                {
                    b.Property<int>("SkillTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("skillTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("SkillTypeId");

                    b.ToTable("skillType","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SpecialAbility", b =>
                {
                    b.Property<int>("SpecialAbilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("specialAbilityId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("SpecialAbilityId");

                    b.ToTable("specialAbility","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("speciesId");

                    b.Property<int?>("Agility")
                        .HasColumnName("agility");

                    b.Property<int?>("Brawn")
                        .HasColumnName("brawn");

                    b.Property<int?>("Cunning")
                        .HasColumnName("cunning");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Experience")
                        .HasColumnName("experience");

                    b.Property<int?>("Intellect")
                        .HasColumnName("intellect");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Presence")
                        .HasColumnName("presence");

                    b.Property<int?>("StrainThreshold")
                        .HasColumnName("strainThreshold");

                    b.Property<int?>("Willpower")
                        .HasColumnName("willpower");

                    b.Property<int?>("WoundThreshold")
                        .HasColumnName("woundThreshold");

                    b.HasKey("SpeciesId");

                    b.ToTable("species","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SpeciesAbility", b =>
                {
                    b.Property<int>("SpeciesId")
                        .HasColumnName("speciesId");

                    b.Property<int>("SpecialAbilityId")
                        .HasColumnName("specialAbilityId");

                    b.HasKey("SpeciesId", "SpecialAbilityId");

                    b.ToTable("speciesAbility","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SpeciesReference", b =>
                {
                    b.Property<int>("SpeciesId")
                        .HasColumnName("speciesId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("SpeciesId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("speciesReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Talent", b =>
                {
                    b.Property<int>("TalentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("talentId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<bool?>("Passive")
                        .HasColumnName("passive");

                    b.HasKey("TalentId");

                    b.ToTable("talent","character");
                });

            modelBuilder.Entity("StarWarsRPG.Models.TalentReference", b =>
                {
                    b.Property<int>("TalentReferenceId")
                        .HasColumnName("talentReferenceId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("TalentReferenceId", "BookId");

                    b.ToTable("talentReference","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vehicleId");

                    b.Property<int?>("AltitudeLimit")
                        .HasColumnName("altitudeLimit");

                    b.Property<int?>("Armor")
                        .HasColumnName("armor");

                    b.Property<string>("Class")
                        .HasColumnName("class")
                        .HasMaxLength(50);

                    b.Property<string>("Consumables")
                        .HasColumnName("consumables")
                        .HasMaxLength(50);

                    b.Property<int?>("Cost")
                        .HasColumnName("cost");

                    b.Property<int?>("DefenseAft")
                        .HasColumnName("defenseAft");

                    b.Property<int?>("DefenseBow")
                        .HasColumnName("defenseBow");

                    b.Property<int?>("DefensePort")
                        .HasColumnName("defensePort");

                    b.Property<int?>("DefenseStarport")
                        .HasColumnName("defenseStarport");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<bool?>("DroidSocket")
                        .HasColumnName("droidSocket");

                    b.Property<decimal?>("Encumberance")
                        .HasColumnName("encumberance")
                        .HasColumnType("decimal(18, 1)");

                    b.Property<int?>("Handling")
                        .HasColumnName("handling");

                    b.Property<int?>("HardPoints")
                        .HasColumnName("hardPoints");

                    b.Property<string>("HullType")
                        .HasColumnName("hullType")
                        .HasMaxLength(50);

                    b.Property<int?>("HyperdriveBackupId")
                        .HasColumnName("hyperdriveBackupId");

                    b.Property<int?>("HyperdrivePrimaryId")
                        .HasColumnName("hyperdrivePrimaryId");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnName("manufacturerId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<bool?>("Navicomputer")
                        .HasColumnName("navicomputer");

                    b.Property<int?>("PassengerCapacity")
                        .HasColumnName("passengerCapacity");

                    b.Property<int?>("RarityId")
                        .HasColumnName("rarityId");

                    b.Property<bool?>("Restricted")
                        .HasColumnName("restricted");

                    b.Property<int?>("SensorTypeId")
                        .HasColumnName("sensorTypeId");

                    b.Property<int?>("Silhouette")
                        .HasColumnName("silhouette");

                    b.Property<int?>("Speed")
                        .HasColumnName("speed");

                    b.Property<int?>("StrainThreshold")
                        .HasColumnName("strainThreshold");

                    b.Property<int?>("TraumaThreshold")
                        .HasColumnName("traumaThreshold");

                    b.Property<int?>("VehicleTypeId")
                        .HasColumnName("vehicleTypeId");

                    b.HasKey("VehicleId");

                    b.ToTable("vehicle","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.VehicleCrews", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicleId");

                    b.Property<int>("CrewId")
                        .HasColumnName("crewId");

                    b.HasKey("VehicleId", "CrewId");

                    b.ToTable("vehicleCrews","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.VehicleDocks", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicleId");

                    b.Property<int>("VehicleDockId")
                        .HasColumnName("vehicleDockId");

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("VehicleId", "VehicleDockId");

                    b.ToTable("vehicleDocks","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.VehicleReferences", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicleId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int?>("Page")
                        .HasColumnName("page");

                    b.HasKey("VehicleId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("vehicleReferences","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vehicleTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("VehicleTypeId");

                    b.ToTable("vehicleType","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.VehicleWeapons", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnName("vehicleId");

                    b.Property<int>("WeaponId")
                        .HasColumnName("weaponId");

                    b.Property<int?>("ArcTypeId")
                        .HasColumnName("arcTypeId");

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("VehicleId", "WeaponId");

                    b.ToTable("vehicleWeapons","vehicle");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("weaponId");

                    b.Property<int?>("CriticalRating")
                        .HasColumnName("criticalRating");

                    b.Property<int?>("Damage")
                        .HasColumnName("damage");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int?>("Encumberance")
                        .HasColumnName("encumberance");

                    b.Property<int?>("HardPoints")
                        .HasColumnName("hardPoints");

                    b.Property<int?>("MaximumProfileId")
                        .HasColumnName("maximumProfileId");

                    b.Property<int?>("MinimumProfileId")
                        .HasColumnName("minimumProfileId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<int?>("Price")
                        .HasColumnName("price");

                    b.Property<int?>("RarityId")
                        .HasColumnName("rarityId");

                    b.Property<bool?>("Restricted")
                        .HasColumnName("restricted");

                    b.Property<int?>("SkillId")
                        .HasColumnName("skillId");

                    b.Property<int?>("WeaponRangeId")
                        .HasColumnName("weaponRangeId");

                    b.Property<int?>("WeaponTypeId")
                        .HasColumnName("weaponTypeID");

                    b.HasKey("WeaponId");

                    b.ToTable("weapon","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.WeaponQualities", b =>
                {
                    b.Property<int>("WeaponId")
                        .HasColumnName("weaponId");

                    b.Property<int>("QualityId")
                        .HasColumnName("qualityId");

                    b.Property<int?>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("WeaponId", "QualityId");

                    b.ToTable("weaponQualities","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.WeaponReferences", b =>
                {
                    b.Property<int>("WeaponId")
                        .HasColumnName("weaponId");

                    b.Property<int>("BookId")
                        .HasColumnName("bookId");

                    b.Property<int>("Page")
                        .HasColumnName("page");

                    b.HasKey("WeaponId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("weaponReferences","reference");
                });

            modelBuilder.Entity("StarWarsRPG.Models.WeaponType", b =>
                {
                    b.Property<int>("WeaponTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("weaponTypeId");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.HasKey("WeaponTypeId");

                    b.ToTable("weaponType","gear");
                });

            modelBuilder.Entity("StarWarsRPG.Models.ArmorReference", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("ArmorReference")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_armorReference_book");
                });

            modelBuilder.Entity("StarWarsRPG.Models.AttachmentModification", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Attachment", "Attachment")
                        .WithMany("AttachmentModification")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("FK_attachmentModification_attachment");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CareerSpecialization", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Career", "Career")
                        .WithMany("CareerSpecialization")
                        .HasForeignKey("CareerId")
                        .HasConstraintName("FK_careerSpecialization_career");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CareerSpecializtionTalent", b =>
                {
                    b.HasOne("StarWarsRPG.Models.CareerSpecialization", "CareerSpecialization")
                        .WithMany("CareerSpecializtionTalent")
                        .HasForeignKey("CareerSpecializationId")
                        .HasConstraintName("FK_talent_careerSpecialization");
                });

            modelBuilder.Entity("StarWarsRPG.Models.CareerSpecializtionTalentGraph", b =>
                {
                    b.HasOne("StarWarsRPG.Models.CareerSpecializtionTalent", "ChildTalent")
                        .WithMany("CareerSpecializtionTalentGraphChildTalent")
                        .HasForeignKey("ChildTalentId")
                        .HasConstraintName("FK_talentGraph_talent");

                    b.HasOne("StarWarsRPG.Models.CareerSpecializtionTalent", "ParentTalent")
                        .WithMany("CareerSpecializtionTalentGraphParentTalent")
                        .HasForeignKey("ParentTalentId")
                        .HasConstraintName("FK_talentGraph_talent1");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Characteristic", b =>
                {
                    b.HasOne("StarWarsRPG.Models.CharacteristicType", "CharacteristicType")
                        .WithMany("Characteristic")
                        .HasForeignKey("CharacteristicTypeId")
                        .HasConstraintName("FK_characteristic_characteristicType");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearAttachmentReference", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("GearAttachmentReference")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_gearAttachmentReference_book");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearQualityReference", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("GearQualityReference")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_gearQualityReference_book");
                });

            modelBuilder.Entity("StarWarsRPG.Models.GearReference", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("GearReference")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_gearReference_book");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Obligation", b =>
                {
                    b.HasOne("StarWarsRPG.Models.ObligationType", "ObligationType")
                        .WithMany("Obligation")
                        .HasForeignKey("ObligationTypeId")
                        .HasConstraintName("FK_obligation_obligationType");
                });

            modelBuilder.Entity("StarWarsRPG.Models.Skill", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Characteristic", "Characteristic")
                        .WithMany("Skill")
                        .HasForeignKey("CharacteristicId")
                        .HasConstraintName("FK_skill_characteristic");
                });

            modelBuilder.Entity("StarWarsRPG.Models.SpeciesReference", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("SpeciesReference")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_speciesReference_book");
                });

            modelBuilder.Entity("StarWarsRPG.Models.VehicleReferences", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("VehicleReferences")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_vehicleReferences_book");
                });

            modelBuilder.Entity("StarWarsRPG.Models.WeaponReferences", b =>
                {
                    b.HasOne("StarWarsRPG.Models.Book", "Book")
                        .WithMany("WeaponReferences")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_weaponReferences_book");
                });
#pragma warning restore 612, 618
        }
    }
}
